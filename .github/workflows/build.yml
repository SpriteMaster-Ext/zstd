name: build-artifacts

on:
  pull_request:
    branches: [ spritemaster ]
  push:
    branches: [ spritemaster ]

jobs:
  build-mac:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
      with:
         ref: 'spritemaster'
    - name: macintosh build
      working-directory: ./build/makefile
      run: |
        export PATH="$(brew --prefix llvm@14)/bin:${PATH}"
        export LD="$(brew --prefix llvm@14)/bin/ld.lld"
        make shared CC=$(brew --prefix llvm@14)/bin/clang OUT_NAME=libzstd EXTENSION=.dylib
    - name: sign macintosh artifact
      working-directory: ./build/makefile
      env:
        APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
        APPLE_CERTIFICATE_PWD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
        KEYCHAIN: build.keychain
        KEYCHAIN_PWD: build.keychain.pwd.${{ github.run_id }}.${{ github.run_attempt }}
      run: |
        echo $APPLE_CERTIFICATE | base64 --decode > certificate.p12
        echo a
        security create-keychain -p "$KEYCHAIN_PWD" $KEYCHAIN
        echo b
        security default-keychain -s $KEYCHAIN
        echo c
        security unlock-keychain -p "$KEYCHAIN_PWD" $KEYCHAIN
        echo d
        security import certificate.p12 -k $KEYCHAIN -P "$APPLE_CERTIFICATE_PWD" -T /usr/bin/codesign
        echo e
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k $KEYCHAIN_PWD $KEYCHAIN
        echo f
        echo identity-pv: $(security find-identity -p codesigning -v)
        echo identity-v: $(security find-identity -v)
        echo g
        /usr/bin/codesign --force -s "$(security find-identity -v)" libzstd.dylib -v
        echo h
    - name: upload macintosh artifact
      uses: actions/upload-artifact@v3
      with:
        name: libzstd.dylib
        path: ./build/makefile/libzstd.dylib
        if-no-files-found: error

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
         ref: 'spritemaster'
    - name: aptitude
      shell: bash
      run: |
        sudo apt update
        sudo apt install zsh make gcc-11 binutils -y
    - name: linux build
      working-directory: ./build/makefile
      shell: bash
      run: |
        make shared CC=gcc-11 OUT_NAME=libzstd EXTENSION=.so
    - name: upload linux artifact
      uses: actions/upload-artifact@v3
      with:
        name: libzstd.so
        path: ./build/makefile/libzstd.so
        if-no-files-found: error
